1.控制台登录mysql
	mysql -uroot -p
	mysql -h主机地址 -u用户名 -p用户密码
	mysql -h 10.1.249.*** -u aidns -p
2.显示当前已经存在的数据库 
	show databases;
3.打开库
	use 数据库名
4.显示库中的数据表
	show tables;
5.显示数据表的结构:
　describe 表名;
6.建库:
　create database 库名;
7.建表:
　use 库名;
　create table 表名 (字段设定列表);
8.删库和删表:
　drop database 库名;
　drop table 表名;
9.将表中记录清空:
　delete from 表名;
10.显示表中的记录:
　select * from 表名;
11.导出
	mysqldump -u 用户名 -p 数据库名 > 导出的文件名
	11.1导出全库备份到本地的目录
		mysqldump -u$USER -p$PASSWD -h127.0.0.1 -P3306 --routines --default-character-set=utf8 --lock-all-tables --add-drop-database -A > db.all.sql
  11.2导出指定库到本地的目录(例如mysql库)
    mysqldump -u$USER -p$PASSWD -h127.0.0.1 -P3306 --routines --default-character-set=utf8 --databases mysql > db.sql
  11.3导出某个库的表到本地的目录(例如mysql库的user表)
    mysqldump -u$USER -p$PASSWD -h127.0.0.1 -P3306 --routines --default-character-set=utf8 --tables mysql user> db.table.sql
  11.4导出指定库的表(仅数据)到本地的目录(例如mysql库的user表,带过滤条件)
    mysqldump -u$USER -p$PASSWD -h127.0.0.1 -P3306 --routines --default-character-set=utf8 --no-create-db --no-create-info --tables mysql user --where="host='localhost'"> db.table.sql
    -c 带字段名称
  11.5导出某个库的所有表结构
    mysqldump -u$USER -p$PASSWD -h127.0.0.1 -P3306 --routines --default-character-set=utf8 --no-data --databases mysql > db.nodata.sql
  11.6导出某个查询sql的数据为txt格式文件到本地的目录(各数据值之间用"制表符"分隔)
    例如sql为'select user,host,password from mysql.user;'
    mysql -u$USER -p$PASSWD -h127.0.0.1 -P3306 --default-character-set=utf8 --skip-column-names -B -e 'select user,host,password from mysql.user;' > mysql_user.txt
  11.7导出某个查询sql的数据为txt格式文件到MySQL服务器.
    登录MySQL,将默认的制表符换成逗号.(适应csv格式文件).
    指定的路径,mysql要有写的权限.最好用tmp目录,文件用完之后,再删除!
    SELECT user,host,password FROM mysql.user INTO OUTFILE '/tmp/mysql_user.csv' FIELDS TERMINATED BY ',';
  11.8
    mysqldump -u -p -h -P3306 --skip-quote-names --compact --no-create-info --skip-extended-insert --skip-add-locks -c --tables db tables > C:/Users/renho/Desktop/init.sql
12.导入
  12.1恢复全库数据到MySQL,因为包含mysql库的权限表,导入完成需要执行FLUSH PRIVILEGES;命令
    第一种方法:
    	mysql -u$USER -p$PASSWD -h127.0.0.1 -P3306 --default-character-set=utf8 < db.all.sql
    第二种方法:
    	登录MySQL,执行source命令,后面的文件名要用绝对路径.
    	......
    	mysql> source /tmp/db.all.sql;
  12.2恢复某个库的数据(mysql库的user表)
    第一种方法:
    	mysql -u$USER -p$PASSWD -h127.0.0.1 -P3306 --default-character-set=utf8 mysql < db.table.sql
    第二种方法:
    	登录MySQL,执行source命令,后面的文件名要用绝对路径.
    	mysql -u$USER -p$PASSWD -h127.0.0.1 -P3306 --default-character-set=utf8
    	......
    	mysql> use mysql;
    	mysql> source /tmp/db.table.sql;
  12.3恢复MySQL服务器上面的txt格式文件(需要FILE权限,各数据值之间用"制表符"分隔)
    mysql -u$USER -p$PASSWD -h127.0.0.1 -P3306 --default-character-set=utf8
    ......
    mysql> use mysql;
    mysql> LOAD DATA INFILE '/tmp/mysql_user.txt' INTO TABLE user ;
  12.4恢复MySQL服务器上面的csv格式文件(需要FILE权限,各数据值之间用"逗号"分隔)
    mysql -u$USER -p$PASSWD -h127.0.0.1 -P3306 --default-character-set=utf8
    ......
    mysql> use mysql;
    mysql> LOAD DATA INFILE '/tmp/mysql_user.csv' INTO TABLE user FIELDS TERMINATED BY ',';
  12.5恢复本地的txt或csv文件到MySQL
    mysql -u$USER -p$PASSWD -h127.0.0.1 -P3306 --default-character-set=utf8
    ......
    mysql> use mysql;
    # txt
    mysql> LOAD DATA LOCAL INFILE '/tmp/mysql_user.csv' INTO TABLE user;
    # csv
    mysql> LOAD DATA LOCAL INFILE '/tmp/mysql_user.csv' INTO TABLE user FIELDS TERMINATED BY ',';
13.新建用户
	mysql>create user renho identified by '****';	
	授权
		mysql>grant OPTION on *.* to renho;
		mysql>grant all on *.* to renho;
	更改密码
		mysql>set password for renho=password('renho');
		mysql> update mysql.user set password=password('renho')  where user='renho'
14.删除用户
	mysql>drop user renho;
	回收权限
		mysql>revoke select on *.* from renho;  //如果权限不存在会报错
15.命令行连接
	SET character_set_client = utf8 ; 
	SET character_set_connection = utf8 ; 
  set character_set_results=utf8;