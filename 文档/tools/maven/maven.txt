1.下载源代码->mvn dependency:sources 
2.下载doc->mvn dependency:resolve -Dclassifier=javadoc

eclipse+mvn
	环境变量:M2_HOME
			--E:\maven\apache-maven-3.3.3
			M2_REPO
			--E:\maven\apache-maven-3.3.3\localmavenrepo
			MAVEN_HOME
			--E:\maven\apache-maven-3.3.3
	E:\maven\apache-maven-3.3.3\conf\settings.xml
		settings中添加:
			<settings >
  				<localRepository>E:/maven/apache-maven-3.3.3/localmavenrepo</localRepository>
  			</settings>
  	eclipse->windows->preferences->maven->User Settings->路径修改成E:\maven\apache-maven-3.3.3\conf\settings.xml
  下载失败后重新下载
  	是到下载保存在本地的路径把这个包里的后缀名.lastUpdated 文件删除
  	然后点击maven工程项目Maven->Maven Update Project 这样jar重新下载好 或者 run configurations 中的Maven Build 点击New 一个配置页面，在Goals里面设置compile -U
  	
3.自定义安装jar
mvn install:install-file -DgroupId=io.netty -DartifactId=netty-all -Dversion=5.0.0.Alpha2 -Dpackaging=jar -Dfile=C:\Users\renho\Downloads\netty-5.0.0.Alpha2\netty-5.0.0.Alpha2\jar\all-in-one\netty-all-5.0.0.Alpha2.jar

4.导出带jar包
	pom.xml右键maven build -> goals=dependency:copy-dependencies ->run导出的jar在targed/dependency
			或maven build -> goals=dependency:copy-dependencies -DoutputDirectory=lib 导出jar在lib下

1.解压apache-maven-3.3.3-bin.zip后复制到E:\maven中
2.新建环境变量名"MAVEN_HOME",值"E:\maven\apache-maven-3.3.3"
3.修改环境变量PATH
	增加";%MAVEN_HOME%\bin"
4.cmd中输入mvn -v测试环境变量是否成功
5.更改maven的仓库默认存放地址
	修改E:\maven\apache-maven-3.3.3\conf下的settings.xml 文件
	更改localRepository 配置节<localRepository>E:/maven/apache-maven-3.3.3/localmavenrepo</localRepository>
	位置自己设置
6.下载相关包
	cmd->mvn help:system
7.eclipse
	7.1先建maven再导入eclipse
		1.在e:\maven\apache-maven-3.3.3>下执行
			mvn archetype:generate -DgroupId=com.renho.testmaven -DartifactId=mavenTest -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false
			会看见生成mavenTest
		2.在e:\maven\apache-maven-3.3.3\mavenTest>下执行
			mvn eclipse:eclipse
			可以转换为eclipse项目
		3.导入到eclipse
		4.修改E:\maven\apache-maven-3.3.3\mavenTest\pom.xml
			增加
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>5.0.8</version>
			</dependency>
		5.在e:\maven\apache-maven-3.3.3\mavenTest>下执行
			mvn eclipse:eclipse
			maven会下载mysql相关jar文件,并自动修改项目classpath
	7.2直接在eclipse中新建maven项目
		7.1新建普通项目
		7.2然后"Configure"->"Convert to maven project"
		7.3项目下执行cmd -> maven install
8.导出项目(带jar)
	8.1在e:\maven\apache-maven-3.3.3\mavenTest下新建lib文件夹
		cmd->e:\maven\apache-maven-3.3.3\mavenTest下执行
		mvn dependency:copy-dependencies -DoutputDirectory=lib 
		再使用eclipse导出
9.下载jar文件
	cmd->mvn compile
10.修改eclipse maven库路径
	新增环境变量:M2_REPO:E:\maven\apache-maven-3.3.3\localmavenrepo
	"Window"-> "Preferences"->"Maven"->"User Settings"路径
		E:\maven\apache-maven-3.3.3\conf\settings.xml
11.手动安装到本地Maven资源库
	11.1cmd->
			mvn install:install-file -DgroupId=commons -DartifactId=commons-beanutils -Dversion=1.9.2 -Dpackaging=jar -Dfile=E:\文档\java\commons-beanutils-1.9.2-bin\commons-beanutils-1.9.2\commons-beanutils-1.9.2.jar
12.打包发布
	goals参数
		clean install
		package dependency:copy-dependencies -DoutputDirectory=lib
		compile
other
	maven库:http://mvnrepository.com/
13.打jar包
	mvn clean compile
	mvn clean test
	mvn clean package
	mvn clean install
14.可执行jar, 添加以下plugin
	<plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-shade-plugin</artifactId>
		<version>1.2.1</version>
		<executions>
			<execution>
				<phase>package</phase>
				<goals>
					<goal>shade</goal>
				</goals>
				<configuration>
					<transformers>
						<transformer
							implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
							<mainClass>com.renho.Main</mainClass>
						</transformer>
					</transformers>
				</configuration>
			</execution>
		</executions>
	</plugin>
mvn clean package