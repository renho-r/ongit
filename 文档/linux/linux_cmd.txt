1.查找文件 
	find / -name filename.txt 根据名称查找/目录下的filename.txt文件。 
	find . -name "*.xml" 递归查找所有的xml文件

2.创建文件：touch test.txt 
3.压缩文件 
	tar -czf test.tar.gz /test1 /test2
4.列出压缩文件列表 
	tar -tzf test.tar.gz 
5.解压文件 
	tar -xvzf test.tar.gz 
6.查看文件头10行 
	head -n 10 example.txt 
7.查看文件尾10行 
	tail -n 10 example.txt 
8.查看端口占用情况 
	netstat -tln | grep 8080 查看端口8080的使用情况 
9.查看端口属于哪个程序 
	lsof -i :8080 
10.du -sh 查看指定目录的大小 
	du -sh /mnt/online/ 
11.启动tomcat服务 
	nohup ./startup.sh & tail -f ../logs/catalina.out 
	分析：nohup 让程序在后台运行，经常结合 & 一起使用。 
12.分割文件:
	split -l 1000 xml_data renho
13.合并文件:
	cat renho* >> collect.txt
14.awk
	ps -ef|grep JavaJJ.jar |grep -v grep|wc -l|awk '{print $1}'
	ps -ef|grep JavaJJ.jar |grep -v grep|awk '{print $2}' 2>>/dev/null

15.sed
	打印n到m行: sed -n "1, 100p" catalina.out > renho.log
16.linux sublime
17.echo 3 > /proc/sys/vm/drop_caches
18.netstat -antp | grep 2181
19.分割文件
	按行切割, 生成到目录split_by_l文件split_by_l_开头: split -l 100000 catalina.out split_by_l/split_by_l_
	按字节切割, 尽量保证行完整: split -C 100M catalina.out split_by_C/split_by_C_
20.比较文件
	diff conf_8/server.xml conf_9/server.xml -y -w
21.文件查找
	grep -n "port" server.xml
22.screen
	screen -S ngrok
	screen -ls
	screen -r ngrok #回到yourname这个session
	screen -d ngrok #远程detach某个session
	screen -d -r ngrok #结束当前session并回到yourname这个session
	ctr + a + d后台运行