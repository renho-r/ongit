<?xml version="1.0" encoding="UTF-8"?>  
  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"        
    xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"    
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xsi:schemaLocation="   
            http://www.springframework.org/schema/beans     
            http://www.springframework.org/schema/beans/spring-beans-3.1.xsd     
            http://www.springframework.org/schema/aop     
            http://www.springframework.org/schema/aop/spring-aop-3.1.xsd     
            http://www.springframework.org/schema/tx     
            http://www.springframework.org/schema/tx/spring-tx-3.1.xsd     
            http://www.springframework.org/schema/context     
            http://www.springframework.org/schema/context/spring-context-3.1.xsd">  
  	
  	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/world"/>
		<property name="username" value="renho"/>
		<property name="password" value="renho"/> 
	</bean>
  	<!-- 集成mybatis -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:MyBatis-Configuration.xml"></property>
		<property name="transactionFactory">
		    <bean class="org.apache.ibatis.transaction.managed.ManagedTransactionFactory" />
		  </property>
	</bean>
	
	<!--创建dao bean（只需提供接口不需提供实现类 ）-->
	<!--<bean id="userDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.xxx.dao.UserDao" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	-->
  
  	<bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
  		<property name="dataSource" ref="dataSource" />
  	</bean>
    <!-- Spring Advice -->  
    <tx:advice id="txAdvice" transaction-manager="transactionManager">  
        <tx:attributes>  
            <tx:method name="insert*" propagation="REQUIRED" />  
            <tx:method name="update*" propagation="REQUIRED" />  
            <tx:method name="delete*" propagation="REQUIRED" />
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="get*" propagation="REQUIRED" read-only="true"/>  
            <tx:method name="query*" propagation="REQUIRED" read-only="true"/> 
            <tx:method name="find*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="*" propagation="REQUIRED" read-only="true" />
        </tx:attributes>  
    </tx:advice>  
  
    <!-- Spring Aop Config -->  
      
    <!-- <aop:config>  
        <aop:pointcut id="pointcut"  
            expression="execution(* com.renho.service.impl.*Impl.*(..))" />  
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut" />  
    </aop:config> -->
    <aop:config>  
        <aop:pointcut id="pointcut"  
            expression="execution(* com.renho.*.*.*Impl.*(..))" />  
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut" />  
    </aop:config>
    <bean id="cityService" class="com.renho.service.CityService">
    	<property name="sessionFactory" ref="sqlSessionFactory" />
    </bean>
</beans>