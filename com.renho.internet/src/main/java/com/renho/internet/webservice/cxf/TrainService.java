package com.renho.internet.webservice.cxf;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * 高效/快捷/实时,为您打造全方位云数据服务。  电话：029-68859950  了解更多访问:<a href='http://www.36wu.com' target='_blank'>http://www.36wu.com</a>
 *
 * This class was generated by Apache CXF 2.6.10
 * 2015-11-24T15:41:29.479+08:00
 * Generated source version: 2.6.10
 * 
 */
@WebServiceClient(name = "TrainService", 
                  wsdlLocation = "TrainService.asmx",
                  targetNamespace = "Yangzhili") 
public class TrainService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("Yangzhili", "TrainService");
    public final static QName TrainServiceSoap12 = new QName("Yangzhili", "TrainServiceSoap12");
    public final static QName TrainServiceSoap = new QName("Yangzhili", "TrainServiceSoap");
    public final static QName TrainServiceHttpGet = new QName("Yangzhili", "TrainServiceHttpGet");
    public final static QName TrainServiceHttpPost = new QName("Yangzhili", "TrainServiceHttpPost");
    static {
        URL url = TrainService.class.getResource("TrainService.asmx");
        if (url == null) {
            url = TrainService.class.getClassLoader().getResource("TrainService.asmx");
        } 
        if (url == null) {
            java.util.logging.Logger.getLogger(TrainService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "TrainService.asmx");
        }       
        WSDL_LOCATION = url;
    }

    public TrainService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public TrainService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public TrainService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public TrainService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public TrainService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public TrainService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns TrainServiceSoap
     */
    @WebEndpoint(name = "TrainServiceSoap12")
    public TrainServiceSoap getTrainServiceSoap12() {
        return super.getPort(TrainServiceSoap12, TrainServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns TrainServiceSoap
     */
    @WebEndpoint(name = "TrainServiceSoap12")
    public TrainServiceSoap getTrainServiceSoap12(WebServiceFeature... features) {
        return super.getPort(TrainServiceSoap12, TrainServiceSoap.class, features);
    }
    /**
     *
     * @return
     *     returns TrainServiceSoap
     */
    @WebEndpoint(name = "TrainServiceSoap")
    public TrainServiceSoap getTrainServiceSoap() {
        return super.getPort(TrainServiceSoap, TrainServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns TrainServiceSoap
     */
    @WebEndpoint(name = "TrainServiceSoap")
    public TrainServiceSoap getTrainServiceSoap(WebServiceFeature... features) {
        return super.getPort(TrainServiceSoap, TrainServiceSoap.class, features);
    }
    /**
     *
     * @return
     *     returns TrainServiceHttpGet
     */
    @WebEndpoint(name = "TrainServiceHttpGet")
    public TrainServiceHttpGet getTrainServiceHttpGet() {
        return super.getPort(TrainServiceHttpGet, TrainServiceHttpGet.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns TrainServiceHttpGet
     */
    @WebEndpoint(name = "TrainServiceHttpGet")
    public TrainServiceHttpGet getTrainServiceHttpGet(WebServiceFeature... features) {
        return super.getPort(TrainServiceHttpGet, TrainServiceHttpGet.class, features);
    }
    /**
     *
     * @return
     *     returns TrainServiceHttpPost
     */
    @WebEndpoint(name = "TrainServiceHttpPost")
    public TrainServiceHttpPost getTrainServiceHttpPost() {
        return super.getPort(TrainServiceHttpPost, TrainServiceHttpPost.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns TrainServiceHttpPost
     */
    @WebEndpoint(name = "TrainServiceHttpPost")
    public TrainServiceHttpPost getTrainServiceHttpPost(WebServiceFeature... features) {
        return super.getPort(TrainServiceHttpPost, TrainServiceHttpPost.class, features);
    }

}
